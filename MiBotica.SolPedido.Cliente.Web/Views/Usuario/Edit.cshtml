@model MiBotica.SolPedido.Entidades.Core.Usuario

@{
    ViewBag.Title = "Editar Usuario";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
<style>
    :root {
        --primary-color: #3498db;
        --secondary-color: #2c3e50;
        --success-color: #2ecc71;
        --light-bg: #f8f9fa;
        --border-color: #e0e0e0;
        --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .card {
        border: none;
        border-radius: 10px;
        box-shadow: var(--shadow);
        overflow: hidden;
        margin-bottom: 30px;
    }

    .card-header {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        padding: 20px 25px;
        border-bottom: none;
    }

        .card-header h2 {
            margin: 0;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 10px;
        }

    .card-body {
        padding: 30px;
    }

    .form-group {
        margin-bottom: 25px;
    }

    .form-label {
        font-weight: 600;
        color: var(--secondary-color);
        margin-bottom: 8px;
    }

    .form-control {
        border-radius: 6px;
        border: 1px solid var(--border-color);
        padding: 10px 15px;
        transition: all 0.3s;
    }

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(52, 152, 219, 0.25);
        }

    .btn-primary {
        background: linear-gradient(135deg, var(--primary-color), #2980b9);
        border: none;
        border-radius: 6px;
        padding: 10px 25px;
        font-weight: 600;
        transition: all 0.3s;
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }

    .btn-outline-secondary {
        border-radius: 6px;
        padding: 10px 25px;
        font-weight: 600;
        transition: all 0.3s;
    }

        .btn-outline-secondary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

    .password-note {
        font-size: 0.85rem;
        color: #6c757d;
        margin-top: 5px;
        font-style: italic;
    }

    .validation-summary {
        background-color: #f8d7da;
        border: 1px solid #f5c6cb;
        border-radius: 6px;
        padding: 15px;
        margin-bottom: 20px;
    }

    .field-validation-error {
        color: #dc3545;
        font-size: 0.875rem;
        margin-top: 5px;
        display: block;
    }

    .action-buttons {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 30px;
        padding-top: 20px;
        border-top: 1px solid var(--border-color);
    }

    @@media (max-width: 768px) {
        .card-body {
            padding: 20px;
        }

        .action-buttons {
            flex-direction: column;
            gap: 15px;
        }

            .action-buttons > * {
                width: 100%;
            }
    }
</style>

<div class="container">
    <div class="card">
        <div class="card-header">
            <h2><i class="fas fa-user-edit"></i> Editar Usuario</h2>
        </div>
        <div class="card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.IdUsuario)

                @Html.ValidationSummary(true, "", new { @class = "validation-summary" })

                <div class="form-group">
                    @Html.LabelFor(model => model.CodUsuario, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.CodUsuario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CodUsuario, "", new { @class = "field-validation-error" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ClaveTexto, "Contraseña", htmlAttributes: new { @class = "form-label" })
                    @Html.PasswordFor(model => model.ClaveTexto, new { @class = "form-control", placeholder = "Dejar vacío para mantener la contraseña actual" })
                    <div class="password-note">
                        <i class="fas fa-info-circle"></i> Deje este campo vacío si no desea cambiar la contraseña actual.
                    </div>
                    @Html.ValidationMessageFor(model => model.ClaveTexto, "", new { @class = "field-validation-error" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Nombres, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.Nombres, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nombres, "", new { @class = "field-validation-error" })
                </div>

                <div class="action-buttons">
                    <div>
                        @Html.ActionLink("Volver a la Lista", "Index", null, new { @class = "btn btn-outline-secondary" })
                    </div>
                    <div>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> Guardar Cambios
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>